#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include <map>

std::string CheckConditions(const std::map<std::string, bool>& data) {
    if (!data.at("kidney_blood_flow_normal")) return "콩팥/달팽이관 혈류 이상";
    if (!data.at("diencephalon_flow")) return "뇌수 흐름 방향 이상";
    return "정상";
}

std::string CheckCirculatorySystem(const std::map<std::string, bool>& data) {
    if (!data.at("filtered_components")) return "간에서 여과된 성분이 췌장으로 전달되지 않음";
    if (!data.at("hormone_levels")) return "대뇌 호르몬 이상";
    return "정상";
}

std::string CheckBloodCells(const std::map<std::string, bool>& data) {
    if (data.at("rbc_in_lung")) return "전도체 약물 권장";
    if (data.at("wbc_mixed")) return "열전도율이 높은 액체 권장";
    if (data.at("brain_reverse_flow")) return "억제제 및 소화제 권장";
    return "정상";
}

bool CheckUnitVectors(const std::vector<std::vector<double>>& unitVectors) {
    const auto& ref = unitVectors[0];
    for (size_t i = 1; i < unitVectors.size(); ++i) {
        double magnitude = std::sqrt(unitVectors[i][0] * unitVectors[i][0] + unitVectors[i][1] * unitVectors[i][1]);
        if (unitVectors[i][0] / magnitude != ref[0] || unitVectors[i][1] / magnitude != ref[1])
            return false;
    }
    return true;
}

int main() {
    std::map<std::string, bool> data = {
        { "kidney_blood_flow_normal", true },
        { "diencephalon_flow", true },
        { "filtered_components", true },
        { "hormone_levels", true },
        { "rbc_in_lung", false },
        { "wbc_mixed", false },
        { "brain_reverse_flow", false }
    };

    std::vector<std::vector<double>> unitVectors = {
        {1.0, 0.0},
        {1.0, 0.0}
    };

    std::cout << "Initial Conditions: " << CheckConditions(data) << std::endl;
    std::cout << "Circulatory System: " << CheckCirculatorySystem(data) << std::endl;
    std::cout << "Blood Cells: " << CheckBloodCells(data) << std::endl;
    std::cout << "Unit Vector Consistency: " << (CheckUnitVectors(unitVectors) ? "정상" : "불일치") << std::endl;

    return 0;
}

