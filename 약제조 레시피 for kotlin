import kotlin.math.sqrt
import kotlin.math.cosh

fun checkConditions(data: Map<String, Boolean>): String {
    if (!data["kidney_blood_flow_normal"]!!) return "콩팥과 달팽이관 간 모세혈관 혈액순환 이상"
    if (!data["diencephalon_flow"]!!) return "뇌수 흐름 방향 이상"
    return "정상"
}

fun checkCirculatoryAndDigestiveSystem(data: Map<String, Boolean>): String {
    if (!data["filtered_components"]!!) return "간에서 여과된 성분이 췌장으로 전달되지 않음"
    if (!data["hormone_levels"]!!) return "대뇌 호르몬 수치 이상"
    return "정상"
}

fun checkBloodCells(data: Map<String, Boolean>): String {
    if (data["rbc_in_lung"]!!) return "폐순환에서 적혈구 발견 - 백혈병 가능성"
    if (data["wbc_mixed"]!!) return "백혈구 섞임 - 열전도율이 높은 액체 복용 권장"
    if (data["brain_reverse_flow"]!!) return "뇌수 역류 - 억제제 및 소화제 복용 권장"
    return "정상"
}

fun checkUnitVectors(unitVectors: List<List<Double>>): Boolean {
    val reference = normalize(unitVectors[0])
    return unitVectors.all { normalize(it) == reference }
}

fun normalize(vector: List<Double>): List<Double> {
    val magnitude = sqrt(vector.sumOf { it * it })
    return vector.map { it / magnitude }
}

fun checkReproductiveSystem(data: Map<String, Any>): String {
    if (data["protein_intake"] as Boolean != true) return "동물성 단백질 섭취 필요"
    if (data["rbc_wbc_ratio"] as Int != 1
